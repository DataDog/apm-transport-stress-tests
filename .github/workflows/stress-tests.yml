name: Run Stress Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '42 * * * *' # 42nd minute of every hour

jobs:
  stress-tests:
    runs-on: transport-tests-main
    strategy:
      matrix:
        include:
          - library: nodejs
            agent: realagent
            concurrent: 0
          - library: nodejs
            agent: realagent
            concurrent: 2
          - library: nodejs
            agent: realagent
            concurrent: 5
          - library: nodejs
            agent: realagent
            concurrent: 10
          - library: nodejs
            agent: realagent
            concurrent: 20

      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build
      run: ./build.sh ${{ matrix.library }} ${{ matrix.agent }}

    - name: Run TCPIP
      run: ./run.sh tcpip
      env:
        DEBUG_MODE: false
        TRANSPORT_RUN_ID: ${{ github.run_id }}
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
        CONCURRENT_SPAMMERS: ${{ matrix.concurrent }}
        TRACER: ${{ matrix.library }}
        TRANSPORT_STRESS_TIMEOUT_MS: 180000

    - name: TCPIP Spammer Logs
      if: always()
      run: ./show-logs.sh tcpip ${{ matrix.library }} spammer

    - name: TCPIP Agent Logs
      if: always()
      run: ./show-logs.sh tcpip ${{ matrix.library }} mockagent

    - name: Run UDS
      if: always()
      run: ./run.sh uds
      env:
        DEBUG_MODE: false
        TRANSPORT_RUN_ID: ${{ github.run_id }}
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
        CONCURRENT_SPAMMERS: ${{ matrix.concurrent }}
        TRACER: ${{ matrix.library }}
        TRANSPORT_STRESS_TIMEOUT_MS: 180000

    - name: UDS Spammer Logs
      if: always()
      run: ./show-logs.sh uds ${{ matrix.library }} spammer

    - name: UDS Agent Logs
      if: always()
      run: ./show-logs.sh uds ${{ matrix.library }} mockagent

    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: results_${{ matrix.library }}_${{ matrix.agent }}
        path: results
